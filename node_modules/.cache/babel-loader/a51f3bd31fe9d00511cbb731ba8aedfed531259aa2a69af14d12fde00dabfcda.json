{"ast":null,"code":"var _jsxFileName = \"/Users/timcroteau/card-sort/src/GroupArea.js\",\n  _s = $RefreshSig$();\n// src/GroupArea.js\nimport React, { useState } from 'react';\nimport { DeleteIcon, BackIcon } from './Icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Group = _ref => {\n  let {\n    name,\n    onDrop,\n    onDragOver,\n    groupCards,\n    handleDragStart,\n    removeCard,\n    sendCardToHoldingArea,\n    deleteGroup\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"group\",\n    onDrop: e => onDrop(e, name),\n    onDragOver: onDragOver,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"delete-group-btn\",\n      onClick: () => onDeleteGroup(name),\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), groupCards[name] && groupCards[name].map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      draggable: true,\n      onDragStart: e => handleDragStart(e, card),\n      children: [card, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"close-icon-container\",\n          style: {\n            cursor: 'pointer',\n            marginLeft: '4px'\n          },\n          onClick: () => removeCard(card, name),\n          children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 15\n        }, this), name !== 'main' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"back-icon-container\",\n          style: {\n            cursor: 'pointer',\n            marginLeft: '4px'\n          },\n          onClick: () => sendCardToHoldingArea(card, name),\n          children: /*#__PURE__*/_jsxDEV(BackIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)]\n    }, card, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_c = Group;\nconst GroupArea = _ref2 => {\n  _s();\n  let {\n    handleDrop,\n    handleDragOver,\n    cards,\n    setCards,\n    groupCards,\n    setGroupCards,\n    removeCard,\n    sendCardToHoldingArea\n  } = _ref2;\n  const [groups, setGroups] = useState([]);\n  const [newGroupNames, setNewGroupNames] = useState('');\n  const handleCreateGroups = () => {\n    const newGroups = newGroupNames.trim().split('\\n').filter(name => name.trim().length > 0);\n    setGroups([...groups, ...newGroups]);\n    setNewGroupNames('');\n  };\n  const handleGroupNamesChange = e => {\n    setNewGroupNames(e.target.value);\n  };\n  const deleteGroup = groupToDelete => {\n    // Move all cards in the deleted group back to the holding area\n    const cardsToMove = groupCards[groupToDelete] || [];\n    setCards([...cards, ...cardsToMove]);\n\n    // Remove the group from the list of groups\n    setGroups(groups.filter(group => group !== groupToDelete));\n\n    // Remove the group from the groupCards object\n    const newGroupCards = {\n      ...groupCards\n    };\n    delete newGroupCards[groupToDelete];\n    setGroupCards(newGroupCards);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create groups to sort into below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: newGroupNames,\n      onChange: handleGroupNamesChange,\n      rows: 3,\n      placeholder: \"Enter group names separated by new lines\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateGroups,\n      children: \"Create groups\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right\",\n      children: groups.map(group => /*#__PURE__*/_jsxDEV(Group, {\n        name: group,\n        onDrop: handleDrop,\n        onDragOver: handleDragOver,\n        groupCards: groupCards,\n        handleDragStart: (e, card) => {\n          e.dataTransfer.setData('text/plain', card);\n        },\n        removeCard: removeCard,\n        sendCardToHoldingArea: sendCardToHoldingArea,\n        deleteGroup: deleteGroup\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(GroupArea, \"Q8jFw4rY3Zce3GxQZBDdVNpoliE=\");\n_c2 = GroupArea;\nexport default GroupArea;\nvar _c, _c2;\n$RefreshReg$(_c, \"Group\");\n$RefreshReg$(_c2, \"GroupArea\");","map":{"version":3,"names":["React","useState","DeleteIcon","BackIcon","jsxDEV","_jsxDEV","Group","_ref","name","onDrop","onDragOver","groupCards","handleDragStart","removeCard","sendCardToHoldingArea","deleteGroup","className","e","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDeleteGroup","map","card","draggable","onDragStart","style","cursor","marginLeft","_c","GroupArea","_ref2","_s","handleDrop","handleDragOver","cards","setCards","setGroupCards","groups","setGroups","newGroupNames","setNewGroupNames","handleCreateGroups","newGroups","trim","split","filter","length","handleGroupNamesChange","target","value","groupToDelete","cardsToMove","group","newGroupCards","onChange","rows","placeholder","dataTransfer","setData","_c2","$RefreshReg$"],"sources":["/Users/timcroteau/card-sort/src/GroupArea.js"],"sourcesContent":["// src/GroupArea.js\nimport React, { useState } from 'react';\nimport { DeleteIcon, BackIcon } from './Icons';\n\n\nconst Group = ({ name, onDrop, onDragOver, groupCards, handleDragStart, removeCard, sendCardToHoldingArea, deleteGroup }) => {\n  return (\n    <div\n      className=\"group\"\n      onDrop={(e) => onDrop(e, name)}\n      onDragOver={onDragOver}\n    >\n      <h3>{name}</h3>\n      <div className=\"delete-group-btn\" onClick={() => onDeleteGroup(name)}>\n        <DeleteIcon />\n      </div>\n      {groupCards[name] &&\n        groupCards[name].map((card) => (\n          <div\n            className=\"card\"\n            key={card}\n            draggable\n            onDragStart={(e) => handleDragStart(e, card)}\n          >\n            {card}\n            <span>\n              <span \n                className=\"close-icon-container\"\n                style={{ cursor: 'pointer', marginLeft: '4px' }}\n                onClick={() => removeCard(card, name)}\n              >\n                <DeleteIcon />\n              </span>\n              {name !== 'main' && (\n                <span\n                  className=\"back-icon-container\"\n                  style={{ cursor: 'pointer', marginLeft: '4px' }}\n                  onClick={() => sendCardToHoldingArea(card, name)}\n                >\n                  <BackIcon />\n                </span>\n              )}\n              \n            </span>\n          </div>\n      ))}\n    </div>\n  );\n};\n\nconst GroupArea = ({\n  handleDrop,\n  handleDragOver,\n  cards,\n  setCards,\n  groupCards,\n  setGroupCards,\n  removeCard,\n  sendCardToHoldingArea\n}) => {\n  const [groups, setGroups] = useState([]);\n  const [newGroupNames, setNewGroupNames] = useState('');\n\n  const handleCreateGroups = () => {\n    const newGroups = newGroupNames\n      .trim()\n      .split('\\n')\n      .filter((name) => name.trim().length > 0);\n    setGroups([...groups, ...newGroups]);\n    setNewGroupNames('');\n  };\n\n  const handleGroupNamesChange = (e) => {\n    setNewGroupNames(e.target.value);\n  };\n  const deleteGroup = (groupToDelete) => {\n    // Move all cards in the deleted group back to the holding area\n    const cardsToMove = groupCards[groupToDelete] || [];\n    setCards([...cards, ...cardsToMove]);\n\n    // Remove the group from the list of groups\n    setGroups(groups.filter((group) => group !== groupToDelete));\n\n    // Remove the group from the groupCards object\n    const newGroupCards = { ...groupCards };\n    delete newGroupCards[groupToDelete];\n    setGroupCards(newGroupCards);\n  };\n\n  return (\n    <div className=\"right-section\">\n      <h2>Create groups to sort into below</h2>\n      <textarea\n        value={newGroupNames}\n        onChange={handleGroupNamesChange}\n        rows={3}\n        placeholder=\"Enter group names separated by new lines\"\n      />\n      <button onClick={handleCreateGroups}>Create groups</button>\n      <div className=\"right\">\n        {groups.map((group) => (\n          <Group\n            key={group}\n            name={group}\n            onDrop={handleDrop}\n            onDragOver={handleDragOver}\n            groupCards={groupCards}\n            handleDragStart={(e, card) => {\n              e.dataTransfer.setData('text/plain', card);\n            }}\n            removeCard={removeCard}\n            sendCardToHoldingArea={sendCardToHoldingArea}\n            deleteGroup={deleteGroup}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default GroupArea;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}